#!/usr/bin/env python3
"""
Script de d√©marrage simplifi√© du bot
"""

import asyncio
import sys
import os
from main import ELearningBot

def check_requirements():
    """V√©rifier que tous les pr√©requis sont install√©s"""
    try:
        import requests
        import telegram
        import firebase_admin
        import schedule
        import bs4
        print("‚úÖ Toutes les d√©pendances sont install√©es")
        return True
    except ImportError as e:
        print(f"‚ùå D√©pendance manquante: {e}")
        print("Veuillez installer les d√©pendances avec: pip install -r requirements.txt")
        return False

def check_config():
    """V√©rifier la configuration"""
    from config import Config
    
    if not Config.USERNAME or not Config.PASSWORD:
        print("‚ùå Identifiants eLearning manquants")
        print("Veuillez configurer ELEARNING_USERNAME et ELEARNING_PASSWORD dans le fichier .env")
        return False
    
    if not Config.TELEGRAM_TOKEN:
        print("‚ùå Token Telegram manquant")
        print("Veuillez configurer TELEGRAM_TOKEN dans le fichier .env")
        return False
    
    print("‚úÖ Configuration v√©rifi√©e")
    return True

async def main():
    """Fonction principale"""
    print("ü§ñ D√©marrage du Bot eLearning Notifier")
    print("=" * 50)
    
    # V√©rifications pr√©liminaires
    if not check_requirements():
        sys.exit(1)
    
    if not check_config():
        sys.exit(1)
    
    print(f"üìö Surveillance de {len(Config.MONITORED_SPACES)} espaces d'affichage")
    print(f"‚è±Ô∏è V√©rification toutes les {Config.CHECK_INTERVAL_MINUTES} minutes")
    print("=" * 50)
    
    # Cr√©er et d√©marrer le bot
    bot = ELearningBot()
    
    try:
        await bot.start()
    except KeyboardInterrupt:
        print("\nüõë Arr√™t demand√© par l'utilisateur")
    except Exception as e:
        print(f"‚ùå Erreur: {str(e)}")
    finally:
        bot.stop()
        print("üëã Bot arr√™t√©")

if __name__ == "__main__":
    asyncio.run(main())